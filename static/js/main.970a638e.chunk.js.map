{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","aria-checked","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","backgroundColor","onChange","e","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","msg","defaultProps","about","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.970a638e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href='#'>{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href='#'>Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href='#'>{props.about}</a>\r\n            </li> */}\r\n            \r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked=\"false\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    about : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set Title here',\r\n    about : 'Set About here'\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const[text,setText] = useState('');\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert('Converted to UpperCase!','success')\r\n    }\r\n    const handleloClick = ()=>{\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert('Converted to LowerCase!','success')\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = ''\r\n        setText(newText)\r\n        props.showAlert('Text Cleared','success')\r\n    }\r\n    const handleOnChange = (e)=>{\r\n        setText(e.target.value)\r\n    }\r\n    const handleCopy = ()=>{\r\n        let text = document.getElementById('mybox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('Text Copied','success')\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert('Extra Spaces Removed','success')\r\n    } \r\n  return (\r\n    <>\r\n        <div className='container'style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'grey':'white',\r\n                color:props.mode==='dark'?'white':'black'}} onChange = {handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleloClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleClearClick}>Clear</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleExtraSpaces}>Handle Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\"style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length}words and {text.length}characters</p>\r\n            <p>{0.008*text.split(\" \").length}Minutes to read</p>\r\n            <h2>Preview </h2>\r\n            <p>{text.length===0?'Enter some text to preview':text}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n  return (\r\n    props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong> : {props.alert.msg} \r\n        \r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport React, {useState} from 'react';\nimport Navbar from './components/Navbar'\n// import About from './components/About'\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert]=useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      showAlert(null);\n    }, 3000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#04214b';\n      showAlert('Dark Mode has been enabled',\"success\")\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode has been enabled',\"success\")\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title='TextUtils' mode ={mode} toggleMode ={toggleMode} about ='aboutTextUtils'/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n        <Route exact path=\"/about\">\n          <About/>\n        </Route> */}\n        {/* <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />\n        {/* </Route> */}\n      {/* </Switch> */}\n      {/* <About /> */}\n    </div>\n    {/* </Router> */}\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}